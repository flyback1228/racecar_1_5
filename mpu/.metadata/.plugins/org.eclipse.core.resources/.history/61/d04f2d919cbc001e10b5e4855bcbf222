/*
 * mainpp.cpp
 *
 *  Created on: Oct 28, 2023
 *      Author: acsr2004
 */

#include "mainpp.h"
#include "main.h"

#include "stm32h7xx_hal.h"
#include "utility.h"
#include <stdio.h>
#include <cstring>

extern UART_HandleTypeDef huart7;
extern UART_HandleTypeDef huart8;

uint8_t jy901_data[11];

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart){
	if(huart->Instance==UART5){
		if(read_speed_data()==HAL_ERROR){
			HAL_UART_Receive_DMA(&huart5, (uint8_t*)received_speed, sizeof(uint32_t)*(SPEED_PIN_COUNT+1));
		}
	}else if(huart->Instance==UART7){
		switch(led_state){
		case 'r':
		case 'R':
			HAL_GPIO_TogglePin(LED_RED_GPIO_Port, LED_RED_Pin);
			break;
		case 'b':
		case 'B':
			HAL_GPIO_TogglePin(LED_BLUE_GPIO_Port, LED_BLUE_Pin);
			break;
		case 'y':
		case 'Y':
			HAL_GPIO_TogglePin(LED_YELLOW_GPIO_Port, LED_YELLOW_Pin);
			break;
		default:
			break;
		}
	}
}

void HAL_UART_ErrorCallback(UART_HandleTypeDef *UartHandle) {
    if(UartHandle->Instance==UART8) {
    	HAL_UART_Receive_DMA(&huart8, jy901_data, 11);
    }
}

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim){
	if(htim->Instance==TIM16){
		if(input_mode==Manual){
			esc_duty=0;
			servo_duty=0;
			__HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_1,esc_duty);
			__HAL_TIM_SetCompare(&htim3, TIM_CHANNEL_2,servo_duty);
		}
	}
}


void setup(){
	DWT_Init();

	HAL_UART_Receive_DMA(&huart8, jy901_data, 11);


}




void loop(){

	HAL_UART_Transmit(&huart7, (uint8_t*)("\n\n"), 2, 1);

	HAL_Delay(1000);


}


